# High priorities

Converters:
	- NEW Add as_graph() -> rdflib.Graph.
	- NEW Add as_rdf(format: str = "n3") -> str.
	- Implement as_jsonld(). NEW Use as_rdf(format="json-ld").
	- CHANGE Rename as_triples() into as_triplets(). Implement. NEW Use as_rdf().
	- Implement as_dataframe().

Dataset:
	- Helpers: refine contribution and derivation.
	- Helpers: implement generation, invalidation, others?
	- CHANGE Replace 'contributor' by 'contribution'.
	- ?TBD? Go from plural to singular for method names.
	- CHANGE Have files() and with_files() refering to the root distribution (i.e. not the hasPart one).
	- CHANGE Have with_parts(data: Union[ManagedData, DirPath], versioned: bool = True).
	- CHANGE Move current with_files() logic to the new with_parts().
	- ?TBD? Have parts() -> Optional[List[Union[Resources, "DatasetFiles"]], LazyAction].
		=> Cumbersome.
	- ?TBD? Move current files() logic to the new parts().
	- NEW Add media_type as argument of the with_files() methods.

Model implementations:
	- Neuroshapes:
		* Implement.

Store implementations:
	- BlueBrainNexus:
		* Implement.

Lida's use case notebook:
	- Fix inaccurate data model image.
	- Fix discrepancies between used dataset properties and Neuroshapes ones.


# Medium priorities

Forge:
	- NEW Add possibility to configure 'bucket' for when 'source' is the store (i.e. for Model and Ontologies).
	- Add possibility to configure default resolver.
	- Add possibility to configure default term_resource_mapping.
	- ?TBD? Make 'ontology' optional (and an IRI) in the arguments of OntologiesHandler.resolve().
		=> Without 'ontologies', how would the Forge know which ontology to target and how to load it?!

Mapping:
	- Add mapping type.
	- Add used versions of the forge and the model.
	- Add used formatter for identifiers.
	- Add used mappings for ontology terms and files.

Store implementations:
	- RdfLibGraph:
		* Implement.
	- DemoStore:
		* Use forge.transforming.as_jsonld(resource, compacted=False, store_metadata=False) for resource to store data mapping.
		* Example for query rewriting with resolving ("exact", "fuzzy") and lookup ("current", "children") parameters.
		* Example for query rewriting in sparql().
		* Example for processing first values of type LazyAction in register().
		* Example for file store metadata to resource mapping in upload().
		* Example for file metadata use to download files in download().

Mapper implementations:
	- TableMapper:
		* Implement.


# Low priorities

DictWrapper:
	- Make it immutable.

Mapper implementations:
	- ResourceMapper:
		* Implement.

DictionaryMapper:
	- Add support for the full syntax of JSONPath.

Model implementations:
	- DemoModel:
		* Example for only_required=True in template().
		* Example for including nested typed resource templates in requested template in template().
		* Example of an optimization for bulk validation in _validate_many().
		* Example of source changes aware caching of schemas.

Store implementations:
	- DemoStore:
		* Example of an optimization for bulk registration in _register_many().
